{"ast":null,"code":"// src/api.js\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\nconst apiKey = 'AIzaSyAzvIrpQ4_F1d7X6lBwtzJCdMqZdvm7_tw';\nconst genAI = new GoogleGenerativeAI(apiKey);\nconst model = genAI.getGenerativeModel({\n  model: \"gemini-1.5-pro\"\n});\nconst generationConfig = {\n  temperature: 1,\n  topP: 0.95,\n  topK: 64,\n  maxOutputTokens: 11000,\n  responseMimeType: \"text/plain\"\n};\nexport const generateLearningPath = async (domain, level, description) => {\n  const prompt = `Generate a learning path for the domain \"${domain}\", level \"${level}\", and description \"${description}\".`;\n  const chatSession = model.startChat({\n    generationConfig,\n    history: []\n  });\n  try {\n    const result = await chatSession.sendMessage(prompt);\n    return result.response.text();\n  } catch (error) {\n    console.error(\"Error fetching the learning path:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["GoogleGenerativeAI","apiKey","genAI","model","getGenerativeModel","generationConfig","temperature","topP","topK","maxOutputTokens","responseMimeType","generateLearningPath","domain","level","description","prompt","chatSession","startChat","history","result","sendMessage","response","text","error","console"],"sources":["D:/WEB_projects/New folder (2)/PERSONALIZED LEARNING/frontend/src/pages/api.js"],"sourcesContent":["// src/api.js\r\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\r\n\r\nconst apiKey = 'AIzaSyAzvIrpQ4_F1d7X6lBwtzJCdMqZdvm7_tw';\r\nconst genAI = new GoogleGenerativeAI(apiKey);\r\n\r\nconst model = genAI.getGenerativeModel({\r\n  model: \"gemini-1.5-pro\",\r\n});\r\n\r\nconst generationConfig = {\r\n  temperature: 1,\r\n  topP: 0.95,\r\n  topK: 64,\r\n  maxOutputTokens: 11000,\r\n  responseMimeType: \"text/plain\",\r\n};\r\n\r\nexport const generateLearningPath = async (domain, level, description) => {\r\n  const prompt = `Generate a learning path for the domain \"${domain}\", level \"${level}\", and description \"${description}\".`;\r\n\r\n  const chatSession = model.startChat({\r\n    generationConfig,\r\n    history: [],\r\n  });\r\n\r\n  try {\r\n    const result = await chatSession.sendMessage(prompt);\r\n    return result.response.text();\r\n  } catch (error) {\r\n    console.error(\"Error fetching the learning path:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,SAASA,kBAAkB,QAAQ,uBAAuB;AAE1D,MAAMC,MAAM,GAAG,yCAAyC;AACxD,MAAMC,KAAK,GAAG,IAAIF,kBAAkB,CAACC,MAAM,CAAC;AAE5C,MAAME,KAAK,GAAGD,KAAK,CAACE,kBAAkB,CAAC;EACrCD,KAAK,EAAE;AACT,CAAC,CAAC;AAEF,MAAME,gBAAgB,GAAG;EACvBC,WAAW,EAAE,CAAC;EACdC,IAAI,EAAE,IAAI;EACVC,IAAI,EAAE,EAAE;EACRC,eAAe,EAAE,KAAK;EACtBC,gBAAgB,EAAE;AACpB,CAAC;AAED,OAAO,MAAMC,oBAAoB,GAAG,MAAAA,CAAOC,MAAM,EAAEC,KAAK,EAAEC,WAAW,KAAK;EACxE,MAAMC,MAAM,GAAG,4CAA4CH,MAAM,aAAaC,KAAK,uBAAuBC,WAAW,IAAI;EAEzH,MAAME,WAAW,GAAGb,KAAK,CAACc,SAAS,CAAC;IAClCZ,gBAAgB;IAChBa,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMH,WAAW,CAACI,WAAW,CAACL,MAAM,CAAC;IACpD,OAAOI,MAAM,CAACE,QAAQ,CAACC,IAAI,CAAC,CAAC;EAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}